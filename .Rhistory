### Load packages
if (!require("pacman")) {
install.packages("pacman")
}
pacman::p_load(
haven, tidyverse, data.table, lubridate, zoo, fixest, knitr, kableExtra
)
### Set output options
options("tidylog.display" = NULL)
### Read in data for analysis
data <- haven::read_dta("~/Documents/GitHub/event_study_graphs/Til Death MASTER DATA streamlined.dta")
View(data)
head(data)
data %>%
filter(sex == 2) %>%
mutate(ever_treated = cases_when(!is.na(divyear) ~ 1,
is.na(divyear) ~ 0)
data <- data %>%
filter(sex == 2) %>%
mutate(ever_treated = cases_when(!is.na(divyear) ~ 1,
is.na(divyear) ~ 0)
)
head(data)
data <- data %>%
mutate(ever_treated = cases_when(!is.na(divyear) ~ 1,
is.na(divyear) ~ 0)
)
## Set-up
### Load packages
if (!require("pacman")) {
install.packages("pacman")
}
pacman::p_load(
haven, tidyverse, data.table, lubridate, zoo, fixest, knitr, kableExtra
)
### Set output options
options("tidylog.display" = NULL)
### Read in data for analysis
data <- haven::read_dta("~/Documents/GitHub/event_study_graphs/Til Death MASTER DATA streamlined.dta")
data %>%
mutate(ever_treated = cases_when(!is.na(divyear) ~ 1,
is.na(divyear) ~ 0)
)
data %>%
mutate(ever_treated = case_when(!is.na(divyear) ~ 1,
is.na(divyear) ~ 0)
)
names(data)
data %>%
filter(sex == 2)
data <- data %>%
filter(sex == 2) %>%
mutate(ever_treated = case_when(!is.na(divyear) ~ 1,
is.na(divyear) ~ 0)
)
data <- haven::read_dta("~/Documents/GitHub/event_study_graphs/Til Death MASTER DATA streamlined.dta")
data <- data %>%
filter(sex == 2) %>% #  Keep only women
mutate(ever_treated = case_when(!is.na(divyear) ~ 1, # Generate treated
is.na(divyear) ~ 0)
) %>%
mutate(post = if_else(year >= divyear & !is.na(divyear), 1, 0) # Generate post
~ 0
?if_else
)
?if_else
data <- haven::read_dta("~/Documents/GitHub/event_study_graphs/Til Death MASTER DATA streamlined.dta")
data <- data %>%
filter(sex == 2) %>% #  Keep only women
mutate(ever_treated = if_else(is.na(divyear), 0, 1)) %>%, # Generate treated
mutate(post = if_else(year >= divyear & !is.na(divyear), 1, 0)) # Generate post
data <- haven::read_dta("~/Documents/GitHub/event_study_graphs/Til Death MASTER DATA streamlined.dta")
data <- data %>%
filter(sex == 2) %>% #  Keep only women
mutate(ever_treated = if_else(is.na(divyear), 0, 1)) %>% # Generate treated
mutate(post = if_else(year >= divyear & !is.na(divyear), 1, 0)) # Generate post
head(data %>% select(c(ever_treated, post, divyear))
)
data <- haven::read_dta("~/Documents/GitHub/event_study_graphs/Til Death MASTER DATA streamlined.dta")
data <- data %>%
filter(sex == 2) %>% #  Keep only women
mutate(ever_treated = if_else(is.na(divyear), 0, 1)) %>% # Generate treated
mutate(post = if_else(year >= divyear & !is.na(divyear), 1, 0)) # Generate post
head(data %>% select(c(ever_treated, post, divyear, year))
)
head(data %>% select(c(state, ever_treated, post, divyear, year))
)
data <- haven::read_dta("~/Documents/GitHub/event_study_graphs/Til Death MASTER DATA streamlined.dta")
data <- data %>%
filter(sex == 2) %>% #  Keep only women
mutate(ever_treated = if_else(is.na(divyear), 0, 1)) %>% # Generate treated
mutate(post = if_else(year >= divyear & !is.na(divyear), 1, 0)) %>% # Generate post
mutate(treated = ever_treated*post)  %>%
rename(divyear = time_treated)
### Read in data for analysis
data <- haven::read_dta("~/Documents/GitHub/event_study_graphs/Til Death MASTER DATA streamlined.dta")
data <- data %>%
filter(sex == 2) %>% #  Keep only women
mutate(ever_treated = if_else(is.na(divyear), 0, 1)) %>% # Generate treated
mutate(post = if_else(year >= divyear & !is.na(divyear), 1, 0)) %>% # Generate post
mutate(treated = ever_treated*post)  %>%
rename(time_treated = divyear)
View(data)
feols(as.formula(paste0(suiciderate_elast_jag, " ~ ",
" afdcmax + afdcrolls + roevwade + femep stateur + lnpersinc",
"| st + year")),
data = data,
cluster = ~st)
names(data)
feols(as.formula(paste0(suiciderate_elast_jag, " ~ ",
" afdcmax + afdcrolls + roevwade + femep stateur + lnpersinc",
"| st + year")),
data = data,
cluster = ~st)
as.formula(paste0(suiciderate_elast_jag, " ~ ",
" afdcmax + afdcrolls + roevwade + femep stateur + lnpersinc",
"| st + year"))
feols(as.formula(paste0("suiciderate_elast_jag", " ~ ",
" afdcmax + afdcrolls + roevwade + femep stateur + lnpersinc",
"| st + year")),
data = data,
cluster = ~st)
feols(suiciderate_elast_jag ~
afdcmax + afdcrolls + roevwade + femep stateur + lnpersinc
| st + year,
data = data,
cluster = ~st)
feols(suiciderate_elast_jag ~ afdcmax + afdcrolls + roevwade + femep stateur + lnpersinc | st + year, data = data, cluster = ~st)
?feols
feols(suiciderate_elast_jag ~ afdcmax + afdcrolls + roevwade + femep stateur + lnpersinc | st + year,  data, cluster = ~st)
divorce_data <- haven::read_dta("~/Documents/GitHub/event_study_graphs/Til Death MASTER DATA streamlined.dta")
divorce_data <- divorce_data %>%
filter(sex == 2) %>% #  Keep only women
mutate(ever_treated = if_else(is.na(divyear), 0, 1)) %>% # Generate treated
mutate(post = if_else(year >= divyear & !is.na(divyear), 1, 0)) %>% # Generate post
mutate(treated = ever_treated*post)  %>%
rename(time_treated = divyear)
feols(suiciderate_elast_jag ~ afdcmax + afdcrolls + roevwade + femep stateur + lnpersinc | st + year,  divorce_data, cluster = ~st)
feols(suiciderate_elast_jag ~ afdcmax | st + year,  divorce_data, cluster = ~st)
feols(suiciderate_elast_jag ~
afdcmax + afdcrolls + roevwade + femep + stateur + lnpersinc
| st + year,  divorce_data, cluster = ~st)
feols(suiciderate_elast_jag ~
treated + afdcmax + afdcrolls + roevwade + femep + stateur + lnpersinc
| st + year,  divorce_data, cluster = ~st)
paste0("suiciderate_elast_jag ~ treated",
paste(grep("sa", names(brfss), value=TRUE),
grep("sh", names(brfss), value=TRUE),
collapse = "` + `"),
" + afdcmax + afdcrolls + roevwade + femep + stateur + lnpersinc",
" | st + year"
)
paste0("suiciderate_elast_jag ~ treated",
paste(grep("sa", names(divorce_data), value=TRUE),
grep("sh", names(divorce_data), value=TRUE),
collapse = "` + `"),
" + afdcmax + afdcrolls + roevwade + femep + stateur + lnpersinc",
" | st + year"
)
feols(as.formula(paste0("suiciderate_elast_jag ~ treated",
paste(grep("sa", names(divorce_data), value=TRUE),
grep("sh", names(divorce_data), value=TRUE),
collapse = "` + `"),
" + afdcmax + afdcrolls + roevwade + femep + stateur + lnpersinc",
" | st + year"
)
),  divorce_data, cluster = ~st)
feols(
as.formula(
paste0(
"suiciderate_elast_jag ~ treated",
paste(grep("sa", names(divorce_data), value=TRUE),
grep("sh", names(divorce_data), value=TRUE),
collapse = " + "),
" + afdcmax + afdcrolls + roevwade + femep + stateur + lnpersinc",
" | st + year")),  divorce_data, cluster = ~st)
feols(
as.formula(
paste0(
"suiciderate_elast_jag ~ treated + ",
paste(grep("sa", names(divorce_data), value=TRUE),
grep("sh", names(divorce_data), value=TRUE),
collapse = " + "),
" + afdcmax + afdcrolls + roevwade + femep + stateur + lnpersinc",
" | st + year")),  divorce_data, cluster = ~st)
#
View(divorce_data)
grep("sa", names(divorce_data), value=TRUE)
("sh", names(divorce_data), value=TRUE)
grep("sa*", names(divorce_data), value=TRUE)
grep("\bsa", names(divorce_data), value=TRUE)
grep(\b"sa", names(divorce_data), value=TRUE)
grep("^sa", names(divorce_data), value=TRUE)
feols(
as.formula(
paste0(
"suiciderate_elast_jag ~ treated + ",
paste(grep("^sa", names(divorce_data), value=TRUE),
grep("^sh*", names(divorce_data), value=TRUE),
collapse = " + "),
" + afdcmax + afdcrolls + roevwade + femep + stateur + lnpersinc",
" | st + year")),  divorce_data, cluster = ~st)
#
paste(grep("^sa", names(divorce_data), value=TRUE),
grep("^sh*", names(divorce_data), value=TRUE),
collapse = " + ")
grep("^sa", names(divorce_data), value=TRUE)
paste(grep("^sa", names(divorce_data), value=TRUE),
grep("^sh*", names(divorce_data), value=TRUE),
sep = " + ")
grep("^sh*", names(divorce_data), value=TRUE)
feols(
as.formula(
paste0(
"suiciderate_elast_jag ~ treated + ",
paste(grep("^sa", names(divorce_data), value=TRUE), collapse = " + "),
paste(grep("^sh", names(divorce_data), value=TRUE), collapse = " + "),
" + afdcmax + afdcrolls + roevwade + femep + stateur + lnpersinc",
" | st + year")),  divorce_data, cluster = ~st)
paste(grep("^sa", names(divorce_data), value=TRUE), collapse = " + ")
feols(
as.formula(
paste0(
"suiciderate_elast_jag ~ treated + ",
paste(grep("^sa", names(divorce_data), value=TRUE), collapse = " + "),
" + ",
paste(grep("^sh", names(divorce_data), value=TRUE), collapse = " + "),
" + afdcmax + afdcrolls + roevwade + femep + stateur + lnpersinc",
" | st + year")),  divorce_data, cluster = ~st)
